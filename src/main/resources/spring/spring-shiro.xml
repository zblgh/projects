<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-3.0.xsd">
	<description>Shiro config</description>
	<!-- 自定义验证拦截器 -->  
    <bean id="myAuthenFilter" class="com.famework.myframedwz.domain.common.filter.authc.CaptchaFormAuthenticationFilter" />
    
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="filters">
			<util:map>
				<entry key="authc" value-ref="myAuthenFilter"/>
			</util:map>
		</property>
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/adminlogin.html" />
		<property name="successUrl" value="/manager_menu_load.html" />
		<property name="unauthorizedUrl" value="/pages/base/error.jsp" />
		<property name="filterChainDefinitions">
			<value>
				<!-- 
					Anon：不指定过滤器,不需要进行验证的，即这部分是要放行的
					Authc:验证，这些页面必须验证后才能访问，也就是我们说的登录后才能访问。
				-->
				/pages/base/*.jsp*= anon
				/pages/manager/** = authc
				/manager_*.html* = authc
			</value>
		</property>
	</bean>
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!--设置自定义realm -->
		<property name="realm" ref="monitorRealm" />
	</bean>
	<!-- 配置缓存框架 EhCache -->
	<!-- <bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">   
        <property name="cacheManager" ref="cacheManager" /> </bean> -->
        
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!--自定义Realm 继承自AuthorizingRealm -->
	<bean id="monitorRealm" class="com.famework.myframedwz.domain.common.realm.MonitorRealm"></bean>
	<!-- securityManager -->
	<!-- <property name="cacheManager" ref="shiroCacheManager" /> --> 
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>
	<!-- Enable Shiro Annotations for Spring-configured beans. Only run after -->
	<!-- the lifecycleBeanProcessor has run: -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" />
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />

	</bean>

</beans>